# vim:fileencoding=utf-8:foldmethod=marker

# Import theme configuration here
include catppuccin-mocha.conf
background_opacity 0.9

#: Fonts {{{

font_family      BlexMono Nerd Font
bold_font        auto
italic_font      auto
bold_italic_font auto

font_size 12.0

#: }}}

#: Cursor customization {{{

cursor_shape block

#: }}}

#: Scrollback {{{

scrollback_lines 8000

#: }}}

#: Mouse {{{

# unmap left click for open link (easy miss click)
mouse_map left click ungrabbed no-op

#: Click the link under the mouse or move the cursor
mouse_map ctrl+left click ungrabbed mouse_handle_click selection link prompt
mouse_map ctrl+left press ungrabbed mouse_selection normal

mouse_map right press ungrabbed copy_to_clipboard

#: }}}

#: Performance tuning {{{

#: }}}

#: Terminal bell {{{

#: }}}

#: Window layout {{{

remember_window_size  no
initial_window_width  1280
initial_window_height 800

window_resize_step_cells 2
window_resize_step_lines 2

window_border_width 0.5pt

# window_padding_width 0

#: }}}

#: Tab bar {{{

tab_bar_edge bottom
tab_bar_margin_width 0.0
tab_bar_margin_height 0.0 0.0

tab_bar_style powerline
tab_bar_align left

#: }}}

#: Advanced {{{

editor nvim

# env

#: Specify the environment variables to be set in all child processes.
#: Using the name with an equal sign (e.g. env VAR=) will set it to
#: the empty string. Specifying only the name (e.g. env VAR) will
#: remove the variable from the child process' environment. Note that
#: environment variables are expanded recursively, for example::

#:     env VAR1=a
#:     env VAR2=${HOME}/${VAR1}/b

#: The value of VAR2 will be <path to home directory>/a/b.

allow_hyperlinks yes
shell_integration enabled
shell_integration no-cursor

allow_cloning ask
clone_source_strategies venv,conda,env_var,path

term xterm-kitty

#: }}}

#: OS specific tweaks {{{

wayland_titlebar_color system
macos_titlebar_color system

macos_option_as_alt no

#: }}}

#: Keyboard shortcuts {{{

kitty_mod ctrl+shift

# kitty_mod has to be modifiers not keys, see
# https://github.com/kovidgoyal/kitty/discussions/3457#discussioncomment-587511
# so you can NOT do this:
#kitty_mod ctrl+a

#map kitty_mod+enter new_window
# disable this as can lead to window created by accident via press by ctrl+shift+v paste command and then press enter
map kitty_mod+enter no-op
map cmd+enter       no-op

map ctrl+a>x close_window
map ctrl+a>] next_window
map ctrl+a>[ previous_window
map ctrl+a>period move_window_forward
map ctrl+a>comma move_window_backward



#map kitty_mod+t new_tab_with_cwd
# map kitty_mod+t new_tab
map kitty_mod+t launch --location=hsplit
# new_tab will not keep cwd, use `new_tab_with_cwd` instead or `launch --cwd=current --type=tab`
# see https://sw.kovidgoyal.net/kitty/faq/#how-do-i-open-a-new-window-or-tab-with-the-same-working-directory-as-the-current-window
# tmux like tab create via `--cwd=last_reported`, warning: this need kitty `shell_integration enabled`
map ctrl+a>c launch --cwd=last_reported --type=tab

map ctrl+a>, set_tab_title


#: Increase font size
map ctrl+equal  change_font_size all +2.0
map ctrl+plus   change_font_size all +2.0
map ctrl+kp_add change_font_size all +2.0
#: Decrease font size
map ctrl+minus       change_font_size all -2.0
map ctrl+kp_subtract change_font_size all -2.0
#: Reset font size
map ctrl+0 change_font_size all 0


map f11 toggle_fullscreen


# map ctrl+a>e edit_config_file
map ctrl+a>e no-op
map ctrl+a>shift+e launch --type=tab nvim ~/.config/kitty/kitty.conf


#: Reload kitty.conf

map ctrl+a>shift+r combine : load_config_file : launch --type=overlay sh -c 'echo "kitty config reloaded."; echo; read -r -p "Press Enter to exit"; echo ""'

#: Debug kitty configuration

map ctrl+a>shift+d     debug_config
#: }}}
